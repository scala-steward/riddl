<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Entities on RIDDL Documentation</title><link>https://riddl.tech/language/root/domain/context/entity/</link><description>Recent content in Entities on RIDDL Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>reid@reactific.com (Reid Spencer)</managingEditor><webMaster>reid@reactific.com (Reid Spencer)</webMaster><atom:link href="https://riddl.tech/language/root/domain/context/entity/index.xml" rel="self" type="application/rss+xml"/><item><title>Options</title><link>https://riddl.tech/language/root/domain/context/entity/options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>reid@reactific.com (Reid Spencer)</author><guid>https://riddl.tech/language/root/domain/context/entity/options/</guid><description>The optional entity kind prefix is a directive that suggests how the entity might handle its state and received messages. In the example above, we expect the &amp;ldquo;Printer&amp;rdquo; entity to be a physical device. An &amp;ldquo;actor&amp;rdquo; entity in of the same name could be expected to be a person who prints.
The options available suggest how the entity might handle its state and message input:
kind - indicates the intended kind of entity in an argument to the kind entity.</description></item><item><title>State</title><link>https://riddl.tech/language/root/domain/context/entity/state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>reid@reactific.com (Reid Spencer)</author><guid>https://riddl.tech/language/root/domain/context/entity/state/</guid><description>The state definitions of an entity define the structure of the information that the entity retains as its current state.
Syntax Example The state of an entity is defined with the state keyword within the content of an entitydefinition, like this:
entity Car { type Propulsion = any of { ICE, Electric, Steam, Diesel, EMDrive } state Static is { wheels: Integer doors: Integer rightHandDrive: Boolean propulsion: Propulsion } } One of the primary purposes of an entity is to represent the characteristics of the entity with state information.</description></item><item><title>Invariants</title><link>https://riddl.tech/language/root/domain/context/entity/invariants/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>reid@reactific.com (Reid Spencer)</author><guid>https://riddl.tech/language/root/domain/context/entity/invariants/</guid><description>Invariants specify rules about the state of an entity that must never be violated. Invariants typically come from business logic assertions. For example, a business axiom of a warehouse might be that the supply of a product should never be below 1. That is, the warehouse should never completely run out of a product it is storing. Reality, of course, must account for the supply running out; nevertheless specifying an invariant on the business intent may be important.</description></item><item><title>Entity Handler</title><link>https://riddl.tech/language/root/domain/context/entity/handler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>reid@reactific.com (Reid Spencer)</author><guid>https://riddl.tech/language/root/domain/context/entity/handler/</guid><description>Concept See the handler concept page for general information about handlers.
Note that a context can define a handlertoo, but they are different compared to the handlers defined in an entity. See Context Handler for details on them. Handlers are specified with the handler keyword and enclose a set of on clauses that specify what to do with a given event when that handler is active. There are four kinds of on clauses distinguished by the kind of message they handle (command, event, query, and reaction) as detailed in the following sections.</description></item><item><title>Function</title><link>https://riddl.tech/language/root/domain/context/entity/functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>reid@reactific.com (Reid Spencer)</author><guid>https://riddl.tech/language/root/domain/context/entity/functions/</guid><description>TBD</description></item></channel></rss>