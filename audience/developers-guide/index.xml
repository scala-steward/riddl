<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Developer's Guide on RIDDL Documentation</title><link>https://riddl.tech/audience/developers-guide/</link><description>Recent content in Developer's Guide on RIDDL Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>reid@reactific.com (Reid Spencer)</managingEditor><webMaster>reid@reactific.com (Reid Spencer)</webMaster><lastBuildDate>Sat, 06 Aug 2022 10:50:32 -0700</lastBuildDate><atom:link href="https://riddl.tech/audience/developers-guide/index.xml" rel="self" type="application/rss+xml"/><item><title>Principles</title><link>https://riddl.tech/audience/developers-guide/principles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>reid@reactific.com (Reid Spencer)</author><guid>https://riddl.tech/audience/developers-guide/principles/</guid><description>RIDDL is a high level system specification language and as such must obey some principles of such languages. This page provides those principles.
1: Declarative RIDDL is not an implementation language and does not pretend to be computationally complete. RIDDL adopts this what not how principle. Details are for software developers. The analyst or architect that writes RIDDL documents wants to only specify what the system is while abstracting away the process of constructing it.</description></item><item><title>Releasing RIDDL</title><link>https://riddl.tech/audience/developers-guide/releasing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>reid@reactific.com (Reid Spencer)</author><guid>https://riddl.tech/audience/developers-guide/releasing/</guid><description>This is a &amp;ldquo;how to&amp;rdquo; guide on releasing the software.
Build &amp;amp; Test &amp;gt; cd riddl # top level directory of repository &amp;gt; sbt &amp;#34;clean ; test&amp;#34; ... [info] All tests passed. If all tests do not pass, stop and fix the software
Set Version Pick a version number, x.y.z, based on current version and semantic versioning rules Formulate a short description string for the release, call it desc &amp;gt; git tag -a ${x.</description></item></channel></rss>